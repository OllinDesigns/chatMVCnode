ESTA ULTIMA FUNCIONA CON SOCKETS!!

import express from "express";
import session from "express-session";
import passport from "passport";
import http from "http";
import { Server } from "socket.io";
import router from "./routes/routes";
import { db } from "../database/db";
import cors from "cors";
import Message from "./models/messageModel";



import "./utils/auth";

db();

const app = express();
const server = http.createServer(app);
export const io = new Server(server);

app.use(express.static('public'));
app.use(cors({ origin: "*" }));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));

app.use(
  session({
    secret: "cats",
    resave: false,
    saveUninitialized: true,
  })
);

app.use(passport.initialize());
app.use(passport.session());

app.use("/", router);

// Send 'messages' event to the client when they connect
io.on("connection", (socket) => {
  console.log("A user connected with sockets");

  // Retrieve messages from the database
// Retrieve messages from the database
Message.find({})
  .exec()
  .then((messages) => {
    // Emit the messages to the connected client
    socket.emit('messages', messages);
  })
  .catch((err) => {
    console.error("Error retrieving messages:", err);
  });


// Listen for 'new-message' event from the client
socket.on('new-message', async (data: any) => {
  try {
    const newMessage = new Message(data);
    const savedMessage = await newMessage.save();

    // Emit the newly saved message to all connected clients
    io.sockets.emit('new-message', savedMessage);
  } catch (err) {
    console.error("Error saving message:", err);
  }
});

  



  // Handle WebSocket disconnect
  socket.on("disconnect", () => {
    console.log("User disconnected");
  });
});

server.listen(8080, () => {
  console.log("Listening on port: 8080");
});











import express from "express";
import session from "express-session";
import passport from "passport";
import router from "./routes/routes";
import { db } from "../database/db";
import cors from "cors"


// Import your authentication configuration (Passport.js setup)
import "./utils/auth";

// Initialize the database connection
db();

const app = express();

// Enable CORS
app.use(cors({ origin: "*" }));

// Parse JSON and URL-encoded bodies
app.use(express.json());
app.use(express.urlencoded({ extended: false }));

// Session management
app.use(
  session({
    secret: "cats",
    resave: false,
    saveUninitialized: true,
  })
);

// Initialize Passport.js for authentication
app.use(passport.initialize());
app.use(passport.session());

// Use the defined routes
app.use("/", router);

app.listen(8080, () => console.log("Listening on port: 8080"));
