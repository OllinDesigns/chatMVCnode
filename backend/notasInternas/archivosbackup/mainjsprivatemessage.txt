// ESTA FUNCIONA PARA PRIVATEMESSAGES
// var socket = io.connect("http://localhost:8080", {
//   forceNew: true,
// });

// // Listen for the "messages" event (initial messages)
// socket.on("messages", function (data) {
//   render(data);
// });

// // Listen for the "new-message" event (real-time messages)
// socket.on("new-message", function (data) {
//   addMessageToUI(data);
// });

// function render(data) {
//   // Render initial messages when the page loads
//   data.forEach(function (message) {
//     addMessageToUI(message);
//   });
// }

// function addMessageToUI(data) {
//   // Add the new message to the UI
//   var messageHtml = `
//   <div>
//   <em>recipientUser: ${data.recipientUser}</em>
//   <strong>author: ${data.author}</strong>
//   <br>
//   <em>Message: ${data.text}</em>
//   <br><br>
// </div>
//   `;
//   document.getElementById("messages").innerHTML += messageHtml;
// }


// function sendMessage(event) {
//   event.preventDefault();

//   var recipientUser = document.getElementById("recipientUser").value;
//   var text = document.getElementById("text").value;

//   var messageData = {
//     recipientUser: recipientUser,
//     text: text,
//   };

//   // Send the message data to the server using the sendMessage1 function
//   fetch(`/api/messages1/${recipientUser}`, {
//     method: "POST",
//     headers: {
//       "Content-Type": "application/json",
//     },
//     body: JSON.stringify(messageData),
//   })
//     .then((response) => response.json())
//     .then((data) => {
//       // Handle the response if needed
//     })
//     .catch((error) => {
//       console.error("Error sending message:", error);
//     });

//   // Clear the input fields
//   document.getElementById("recipientUser").value = "";
//   document.getElementById("text").value = "";
// }

// // Replace the event handler for the form submission
// document.querySelector("form").onsubmit = sendMessage;